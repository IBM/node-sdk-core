(function() {
  var coroutine, docopt, exitWithError, options, packageJson, usage;

  coroutine = require('bluebird').coroutine;

  docopt = require('docopt').docopt;

  exitWithError = require('./util/exit_with_error');

  packageJson = require('../package.json');

  usage = 'Usage:\n  dependency-lint [--auto-correct] [--generate-config] [--format <format>]\n\nOptions:\n  --auto-correct       Moves mislabeled modules and removes unused modules\n  --format <format>    Select the formatter: json, minimal (default), summary\n  -h, --help           Show this screen\n  --generate-config    Generate a configuration file\n  -v, --version        Show version';

  options = docopt(usage, {
    version: packageJson.version
  });

  coroutine(function*() {
    var error, file, fn, format;
    try {
      file = options['--generate-config'] ? 'generate_config' : 'run';
      fn = require("./" + file);
      format = options['--format'] || 'minimal';
      if (format !== 'json' && format !== 'minimal' && format !== 'summary') {
        throw new Error("Invalid format: '" + format + "'. Valid formats: json, minimal, or summary");
      }
      return (yield fn({
        autoCorrect: options['--auto-correct'],
        format: format
      }));
    } catch (error1) {
      error = error1;
      return exitWithError(error);
    }
  })();

}).call(this);

(function() {
  var DependencyLinter, InstalledModuleValidater, Linter, Promise, UsedModuleFinder, _, coroutine, fsExtra, path, readJson;

  _ = require('lodash');

  DependencyLinter = require('./dependency_linter');

  fsExtra = require('fs-extra');

  InstalledModuleValidater = require('./installed_module_validator');

  path = require('path');

  Promise = require('bluebird');

  UsedModuleFinder = require('./used_module_finder');

  coroutine = Promise.coroutine;

  readJson = Promise.promisify(fsExtra.readJson);

  Linter = (function() {
    function Linter(config) {
      this.dependencyLinter = new DependencyLinter(config);
      this.installedModuleValidater = new InstalledModuleValidater;
      this.usedModuleFinder = new UsedModuleFinder(config);
    }

    Linter.prototype.lint = coroutine(function*(arg) {
      var dir, listedModules, packageJson, usedModules;
      dir = arg.dir, packageJson = arg.packageJson;
      (yield this.installedModuleValidater.validate({
        dir: dir,
        packageJson: packageJson
      }));
      usedModules = (yield this.usedModuleFinder.find({
        dir: dir,
        packageJson: packageJson
      }));
      listedModules = this.getListedModules(packageJson);
      return this.dependencyLinter.lint({
        listedModules: listedModules,
        usedModules: usedModules
      });
    });

    Linter.prototype.getListedModules = function(packageJson) {
      var result;
      result = {};
      ['dependencies', 'devDependencies'].forEach(function(value) {
        return result[value] = _.keys(packageJson[value]);
      });
      return result;
    };

    return Linter;

  })();

  module.exports = Linter;

}).call(this);

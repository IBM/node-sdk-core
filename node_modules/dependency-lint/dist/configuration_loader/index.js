(function() {
  var ConfigurationLoader, Promise, _, access, coroutine, fs, path, readFile, yaml;

  _ = require('lodash');

  fs = require('fs');

  path = require('path');

  Promise = require('bluebird');

  yaml = require('js-yaml');

  coroutine = Promise.coroutine;

  access = Promise.promisify(fs.access);

  readFile = Promise.promisify(fs.readFile);

  ConfigurationLoader = (function() {
    function ConfigurationLoader() {}

    ConfigurationLoader.prototype.defaultConfigPath = path.join(__dirname, '..', '..', 'config', 'default.yml');

    ConfigurationLoader.prototype.load = coroutine(function*(dir) {
      var customizer, defaultConfig, ref, userConfig;
      ref = (yield Promise.all([this.loadDefaultConfig(), this.loadUserConfig(dir)])), defaultConfig = ref[0], userConfig = ref[1];
      customizer = function(objValue, srcValue) {
        if (_.isArray(srcValue)) {
          return srcValue;
        }
      };
      return _.mergeWith({}, defaultConfig, userConfig, customizer);
    });

    ConfigurationLoader.prototype.loadConfig = coroutine(function*(filePath) {
      var content;
      content = (yield readFile(filePath, 'utf8'));
      return yaml.safeLoad(content, {
        filename: filePath
      });
    });

    ConfigurationLoader.prototype.loadDefaultConfig = function() {
      return this.loadConfig(this.defaultConfigPath);
    };

    ConfigurationLoader.prototype.loadUserConfig = coroutine(function*(dir) {
      var error, userConfigPath;
      userConfigPath = path.join(dir, 'dependency-lint.yml');
      try {
        (yield access(userConfigPath));
      } catch (error) {
        return {};
      }
      return (yield this.loadConfig(userConfigPath));
    });

    return ConfigurationLoader;

  })();

  module.exports = ConfigurationLoader;

}).call(this);
